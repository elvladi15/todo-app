{"version":3,"sources":["components/Task/Task.jsx","images/empty-state-img.png","components/Todo/Todo.jsx","App.js","index.js"],"names":["Task","id","description","checked","dispatch","className","onClick","type","ACTIONS","TOGGLE_TASK","payload","DELETE_TASK","ADD_TASK","reducer","tasks","newTasks","Date","now","toString","localStorage","setItem","JSON","stringify","map","task","filter","Todo","useState","setTaskDescription","useReducer","parse","getItem","onSubmit","e","preventDefault","placeholder","value","required","onChange","target","length","src","emptyState","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAGe,SAASA,EAAT,GAAuD,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACvD,OACE,qBAAKC,UAAS,eAAUF,EAAU,UAAY,MAA9C,SACE,sBAAKE,UAAU,YAAf,UACE,4BAAIH,IACJ,sBAAKG,UAAU,SAAf,UACE,wBACEA,UAAU,aACVC,QAAS,WACPF,EAAS,CAAEG,KAAMC,EAAQC,YAAaC,QAAS,CAAET,SAHrD,SAMGE,EAAU,eAAiB,eAE9B,wBACEE,UAAU,cACVC,QAAS,WACPF,EAAS,CAAEG,KAAMC,EAAQG,YAAaD,QAAS,CAAET,SAHrD,iC,UCjBK,MAA0B,4CCK5BO,EAAU,CACrBI,SAAU,WACVH,YAAa,cACbE,YAAa,eAEf,SAASE,EAAQC,EAAjB,GAA4C,IAAlBP,EAAiB,EAAjBA,KAAMG,EAAW,EAAXA,QAC9B,GAAIH,IAASC,EAAQI,SAAU,CAC7B,IAAMG,EAAQ,sBACTD,GADS,CAEZ,CACEb,GAAIe,KAAKC,MAAMC,WACfhB,YAAaQ,EAAQR,YACrBC,SAAS,KAIb,OADAgB,aAAaC,QAAQ,QAASC,KAAKC,UAAUP,IACtCA,EACF,GAAIR,IAASC,EAAQC,YAAa,CACvC,IAAMM,EAAWD,EAAMS,KAAI,SAACC,GAC1B,OAAIA,EAAKvB,KAAOS,EAAQT,GACf,2BACFuB,GADL,IAEErB,SAAUqB,EAAKrB,UAGZqB,KAGT,OADAL,aAAaC,QAAQ,QAASC,KAAKC,UAAUP,IACtCA,EACF,GAAIR,IAASC,EAAQG,YAAa,CACvC,IAAMI,EAAWD,EAAMW,QAAO,SAACD,GAAD,OAAUA,EAAKvB,KAAOS,EAAQT,MAE5D,OADAkB,aAAaC,QAAQ,QAASC,KAAKC,UAAUP,IACtCA,GAGI,SAASW,IACtB,MAA0CC,mBAAS,IAAnD,mBAAOzB,EAAP,KAAoB0B,EAApB,KACA,EAA0BC,qBACxBhB,EACAQ,KAAKS,MAAMX,aAAaY,QAAQ,WAAa,IAF/C,mBAAOjB,EAAP,KAAcV,EAAd,KAaA,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,uBAAMA,UAAU,MAAM2B,SAXR,SAACC,GACnBA,EAAEC,iBACF9B,EAAS,CACPG,KAAMC,EAAQI,SACdF,QAAS,CAAER,iBAEb0B,EAAmB,KAKf,UACE,uBACErB,KAAK,OACL4B,YAAY,aACZC,MAAOlC,EACPmC,UAAQ,EACRC,SAAU,SAACL,GACTL,EAAmBK,EAAEM,OAAOH,UAGhC,wBAAQ7B,KAAK,SAAb,yBAEgB,IAAjBO,EAAM0B,OACL,qBAAKnC,UAAU,cAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKoC,IAAKC,EAAYC,IAAI,OAE5B,0GAMJ,qBAAKtC,UAAU,QAAf,SACGS,EAAMS,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAEEvB,GAAIuB,EAAKvB,GACTC,YAAasB,EAAKtB,YAClBC,QAASqB,EAAKrB,QACdC,SAAUA,GAJLoB,EAAKvB,cC/EX2C,MAJf,WACE,OAAO,cAAC,EAAD,KCETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5a289aad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ACTIONS } from \"../Todo/Todo\";\r\nimport \"./Task.css\";\r\nexport default function Task({ id, description, checked, dispatch }) {\r\n  return (\r\n    <div className={`task ${checked ? \"checked\" : null}`}>\r\n      <div className=\"container\">\r\n        <p>{description}</p>\r\n        <div className=\"bottom\">\r\n          <button\r\n            className=\"btn--check\"\r\n            onClick={() => {\r\n              dispatch({ type: ACTIONS.TOGGLE_TASK, payload: { id } });\r\n            }}\r\n          >\r\n            {checked ? \"Uncheck task\" : \"Check task\"}\r\n          </button>\r\n          <button\r\n            className=\"btn--delete\"\r\n            onClick={() => {\r\n              dispatch({ type: ACTIONS.DELETE_TASK, payload: { id } });\r\n            }}\r\n          >\r\n            Delete task\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/empty-state-img.678e4560.png\";","import React, { useState, useReducer } from \"react\";\r\nimport Task from \"../Task/Task\";\r\nimport \"./Todo.css\";\r\nimport emptyState from \"../../images/empty-state-img.png\";\r\n\r\nexport const ACTIONS = {\r\n  ADD_TASK: \"add-task\",\r\n  TOGGLE_TASK: \"toggle-task\",\r\n  DELETE_TASK: \"delete-task\",\r\n};\r\nfunction reducer(tasks, { type, payload }) {\r\n  if (type === ACTIONS.ADD_TASK) {\r\n    const newTasks = [\r\n      ...tasks,\r\n      {\r\n        id: Date.now().toString(),\r\n        description: payload.description,\r\n        checked: false,\r\n      },\r\n    ];\r\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\r\n    return newTasks;\r\n  } else if (type === ACTIONS.TOGGLE_TASK) {\r\n    const newTasks = tasks.map((task) => {\r\n      if (task.id === payload.id) {\r\n        return {\r\n          ...task,\r\n          checked: !task.checked,\r\n        };\r\n      }\r\n      return task;\r\n    });\r\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\r\n    return newTasks;\r\n  } else if (type === ACTIONS.DELETE_TASK) {\r\n    const newTasks = tasks.filter((task) => task.id !== payload.id);\r\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\r\n    return newTasks;\r\n  }\r\n}\r\nexport default function Todo() {\r\n  const [description, setTaskDescription] = useState(\"\");\r\n  const [tasks, dispatch] = useReducer(\r\n    reducer,\r\n    JSON.parse(localStorage.getItem(\"tasks\")) || []\r\n  );\r\n\r\n  const handleCLick = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: ACTIONS.ADD_TASK,\r\n      payload: { description },\r\n    });\r\n    setTaskDescription(\"\");\r\n  };\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className=\"container\">\r\n        <form className=\"top\" onSubmit={handleCLick}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter task\"\r\n            value={description}\r\n            required\r\n            onChange={(e) => {\r\n              setTaskDescription(e.target.value);\r\n            }}\r\n          />\r\n          <button type=\"submit\">Add task</button>\r\n        </form>\r\n        {tasks.length === 0 ? (\r\n          <div className=\"no-elements\">\r\n            <div className=\"container\">\r\n              <div className=\"empty-state-img\">\r\n                <img src={emptyState} alt=\"\" />\r\n              </div>\r\n              <label>\r\n                There are no tasks created. You can start adding your tasks now!\r\n              </label>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"tasks\">\r\n            {tasks.map((task) => (\r\n              <Task\r\n                key={task.id}\r\n                id={task.id}\r\n                description={task.description}\r\n                checked={task.checked}\r\n                dispatch={dispatch}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Todo from \"./components/Todo/Todo\";\n\nfunction App() {\n  return <Todo />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}